public static HSSFCellStyle getStyle(HSSFWorkbook workbook) {  
	    //设置字体;  
	    HSSFFont font = workbook.createFont();  
	    //设置字体大小;  
	    font.setFontHeightInPoints((short) 5);  
	    //设置字体名字;  
	    font.setFontName("Courier New");  
	    //font.setItalic(true);  
	    //font.setStrikeout(true);  
	    //设置样式;  
	    HSSFCellStyle style = workbook.createCellStyle();  
	    //设置底边框;  
	    style.setBorderBottom(HSSFCellStyle.BORDER_THIN);  
	    //设置底边框颜色;  
	    style.setBottomBorderColor(HSSFColor.BLACK.index);  
	    //设置左边框;  
	    style.setBorderLeft(HSSFCellStyle.BORDER_THIN);  
	    //设置左边框颜色;  
	    style.setLeftBorderColor(HSSFColor.BLACK.index);  
	    //设置右边框;  
	    style.setBorderRight(HSSFCellStyle.BORDER_THIN);  
	    //设置右边框颜色;  
	    style.setRightBorderColor(HSSFColor.BLACK.index);  
	    //设置顶边框;  
	    style.setBorderTop(HSSFCellStyle.BORDER_THIN);  
	    //设置顶边框颜色;  
	    style.setTopBorderColor(HSSFColor.BLACK.index);  
	    //在样式用应用设置的字体;  
	     style.setFont(font);  
	     //设置自动换行;  
	     style.setWrapText(false);  
	     //设置水平对齐的样式为居中对齐;  
	     style.setAlignment(HSSFCellStyle.ALIGN_CENTER);  
	     //设置垂直对齐的样式为居中对齐;  
	     style.setVerticalAlignment(HSSFCellStyle.VERTICAL_CENTER);  
	     return style;  
	 }  
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 	public AjaxJson preview(ReporthisEntity reporthis, HttpServletRequest request,HttpServletResponse response) throws Exception {
		AjaxJson j = new AjaxJson();
		String path = new String(request.getParameter("url").getBytes("ISO-8859-1"),"UTF-8"); 
		 String yearnum = request.getParameter("yearnum"); 
		 String url = ResourceUtil.getClassPath()+"kfbj"+System.getProperty("file.separator")+"hisdata"+System.getProperty("file.separator")
		 +yearnum +System.getProperty("file.separator")+path;
		 File file = new File(url);
		 if(file.exists()){
//			 getExcelContent(url);
			 //利用poi读取excel内容，但没有样式
//			 String result = new ExcelToHtml3(file).parseExcelToHtml();
			 /**
			  * 样式不全
			  */
		        InputStream is = null;
		        String htmlExcel = null;
	            File sourcefile = new File(url);
	            is = new FileInputStream(sourcefile);
	            Workbook wb = WorkbookFactory.create(is);//此WorkbookFactory在POI-3.10版本中使用需要添加dom4j
	            if (wb instanceof XSSFWorkbook) {
	                XSSFWorkbook xWb = (XSSFWorkbook) wb;
	                htmlExcel = new ExcelToHtml4().getExcelInfo(xWb,true);
	            }else if(wb instanceof HSSFWorkbook){
	                HSSFWorkbook hWb = (HSSFWorkbook) wb;
	                htmlExcel =  new ExcelToHtml4().getExcelInfo(hWb,true);
	            }
	            j.setMsg(htmlExcel);
			 
//				String result = new ExcelToHtml6().read(url);
//			    j.setMsg(result);
		 }else{
			 j.setSuccess(false);
			 j.setMsg("历史数据不存在！");
		 }
		
		return j;
	}
	
	public String getExcelContent(String urlReal) throws Exception{
		BufferedInputStream bis = null;
	    URL url = null;
	    HttpURLConnection httpUrl = null; // 建立链接
	    url = new URL(urlReal);
	    httpUrl = (HttpURLConnection) url.openConnection();// 连接指定的资源
	    httpUrl.connect();// 获取网络输入流
	    bis = new BufferedInputStream(httpUrl.getInputStream());  

	   StringBuffer content = new StringBuffer();
	   HSSFWorkbook workbook = new HSSFWorkbook(bis);
	   for (int numSheets = 0; numSheets < workbook.getNumberOfSheets(); numSheets++) {
	    HSSFSheet aSheet = workbook.getSheetAt(numSheets);// 获得一个sheet
	    content.append("/n");
	    if (null == aSheet) {
	     continue;
	    }
	    for (int rowNum = 0; rowNum <= aSheet.getLastRowNum(); rowNum++) {
	     content.append("/n");
	     HSSFRow aRow = aSheet.getRow(rowNum);
	     if (null == aRow) {
	      continue;
	     }
	     for (short cellNum = 0; cellNum <= aRow.getLastCellNum(); cellNum++) {
	      HSSFCell aCell = aRow.getCell(cellNum);
	      if (null == aCell) {
	       continue;
	      }
	      if (aCell.getCellType() == HSSFCell.CELL_TYPE_STRING) {
	       content.append(aCell.getRichStringCellValue()
	         .getString());
	      } else if (aCell.getCellType() == HSSFCell.CELL_TYPE_NUMERIC) {
	       boolean b = HSSFDateUtil.isCellDateFormatted(aCell);
	       if (b) {
	        Date date = aCell.getDateCellValue();
	        SimpleDateFormat df = new SimpleDateFormat(
	          "yyyy-MM-dd");
	        content.append(df.format(date));
	       }
	      }
	     }
	    }
	   }
	   System.out.println();
	   return content.toString();
//	   response.getWriter().write(content.toString());

	}